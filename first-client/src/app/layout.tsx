import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { getGlobalData, getMetaData } from "@/data/loaders";
import { Header } from "@/components/header";
import Footer from "@/components/footer";
import { promises } from "dns";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export async function getMetadata(): Promise<Metadata> {
  const metaData = await getMetaData();
  return {
    title: metaData?.data?.title ?? "Create",
    description: metaData?.data?.description ?? "Generated by create next app",
  };
}

export const metadata: Metadata = {};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const globalPage = await getGlobalData();
  console.dir(globalPage, { depth: null });
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Header data={globalPage.data.header} />
        <div>{children}</div>
        <Footer data={globalPage.data.footer} />
      </body>
    </html>
  );
}
